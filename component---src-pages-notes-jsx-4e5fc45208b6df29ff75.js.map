{"version":3,"sources":["webpack:///./src/helpers/math.js","webpack:///./src/components/Document.jsx","webpack:///./src/pages/notes.jsx","webpack:///./src/utils/generateNoteSlug.js"],"names":["randomInt","maxInt","Math","floor","random","Document","note","imgSrc","type","noteImage","packageImage","sign","rotation","className","src","alt","style","transform","code","professor","semester","NotesPage","props","renderDocuments","query","state","toLowerCase","data","allNotesJson","edges","filter","edge","node","includes","courseTitle","map","key","id","to","generateNoteSlug","updateQuery","e","setState","target","value","render","Fragment","title","keywords","description","NotesNav","didUpdateSearch","this","NotesFooter","Component","NotesQuery","module","exports","replace"],"mappings":"yUAAaA,EAAY,SAACC,GACtB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,KCwClCI,G,UAhCE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,EAAuB,SAAdD,EAAKE,KAAkBC,IAAYC,IAC5CC,EAAwB,IAAjBX,EAAU,GAAW,GAAK,EACjCY,EAA0B,GAAfZ,EAAU,GAAWW,EAEtC,OACE,yBAAKE,UAAU,YACb,yBACEA,UAAU,gBACVC,IAAKP,EACLQ,IAAI,WACJC,MAAO,CAAEC,UAAU,UAAWL,EAAZ,UAEpB,yBAAKC,UAAU,sBAAsBP,EAAKY,MAC1C,yBAAKL,UAAU,sBAAsBP,EAAKa,WAC1C,yBAAKN,UAAU,qBAAqBP,EAAKc,a,yFCVzCC,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAOFC,gBAAkB,WAChB,IAAMC,EAAQ,EAAKC,MAAMD,MAAME,cAE/B,OADiB,EAAKJ,MAAdK,KACIC,aAAaC,MACtBC,QACC,SAAAC,GAAI,MACQ,KAAVP,GACAO,EAAKC,KAAKd,KAAKQ,cAAcO,SAAST,IACtCO,EAAKC,KAAKE,YAAYR,cAAcO,SAAST,MAEhDW,KAAI,SAAAJ,GAAI,OACP,kBAAC,OAAD,CAAMK,IAAKL,EAAKC,KAAKK,GAAIC,GAAIC,IAAiBR,EAAKC,OACjD,kBAAC,EAAD,CAAU1B,KAAMyB,EAAKC,YApBV,EAyBnBQ,YAAc,SAAAC,GACZ,EAAKC,SAAS,CAAElB,MAAOiB,EAAEE,OAAOC,SAvBhC,EAAKnB,MAAQ,CACXD,MAAO,IAJQ,E,oCA6BnBqB,OAAA,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CACEC,MAAM,kBACNC,SAAU,CAAC,cAAD,kBACVC,YAAY,qFAEd,kBAACC,EAAA,EAAD,CAAUC,gBAAiBC,KAAKZ,cAChC,0BAAM3B,UAAU,6BACd,wBAAIA,UAAU,qBAAd,aACA,6BAASA,UAAU,sBAAsBuC,KAAK7B,oBAEhD,kBAAC8B,EAAA,EAAD,Q,GA3CgBC,aA2DXC,GAFElC,YAEQ,e,qBCzEvBmC,EAAOC,QAAU,SAAAnD,GACf,MAAM,UAAWA,EAAKY,KAAKwC,QAAQ,OAAQ,IAA3C,IAAkDpD,EAAKE","file":"component---src-pages-notes-jsx-4e5fc45208b6df29ff75.js","sourcesContent":["export const randomInt = (maxInt) => {\n    return Math.floor(Math.random() * Math.floor(maxInt))\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport noteImage from '../images/note.svg';\nimport packageImage from '../images/package.svg';\nimport { randomInt } from '../helpers/math';\n\nimport './Document.scss';\n\nconst Document = ({ note }) => {\n  const imgSrc = note.type === 'note' ? noteImage : packageImage;\n  const sign = randomInt(1) === 0 ? 1 : -1;\n  const rotation = randomInt(8) * 0.5 * sign;\n\n  return (\n    <div className=\"Document\">\n      <img\n        className=\"document__img\"\n        src={imgSrc}\n        alt=\"Document\"\n        style={{ transform: `rotate(${rotation}deg)` }}\n      />\n      <div className=\"document-code__div\">{note.code}</div>\n      <div className=\"document-prof__div\">{note.professor}</div>\n      <div className=\"document-sem__div\">{note.semester}</div>\n    </div>\n  );\n};\n\nDocument.propTypes = {\n  note: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n    courseTitle: PropTypes.string,\n    link: PropTypes.string.isRequired,\n    semester: PropTypes.string.isRequired,\n    professor: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Document;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\n\nimport Document from '../components/Document';\nimport NotesNav from '../components/NotesNav';\nimport NotesFooter from '../components/NotesFooter';\nimport SEO from '../components/seo';\n\nimport '../styles/layout.scss';\nimport '../styles/responsive.scss';\nimport './notes.scss';\nimport generateNoteSlug from '../utils/generateNoteSlug';\n\nclass NotesPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: '',\n    };\n  }\n\n  renderDocuments = () => {\n    const query = this.state.query.toLowerCase();\n    const { data } = this.props;\n    return data.allNotesJson.edges\n      .filter(\n        edge =>\n          query === '' ||\n          edge.node.code.toLowerCase().includes(query) ||\n          edge.node.courseTitle.toLowerCase().includes(query),\n      )\n      .map(edge => (\n        <Link key={edge.node.id} to={generateNoteSlug(edge.node)}>\n          <Document note={edge.node} />\n        </Link>\n      ));\n  };\n\n  updateQuery = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <SEO\n          title=\"Anthony's Notes\"\n          keywords={[`engineering`, `school`, `notes`]}\n          description=\"A Collection of Notes for Concordia Engineering Courses (ENGR, COEN, ELEC, COMP)\"\n        />\n        <NotesNav didUpdateSearch={this.updateQuery} />\n        <main className=\"container documents__main\">\n          <h3 className=\"documents__header\">Documents</h3>\n          <section className=\"documents__section\">{this.renderDocuments()}</section>\n        </main>\n        <NotesFooter />\n      </React.Fragment>\n    );\n  }\n}\n\nNotesPage.propTypes = {\n  data: PropTypes.shape({\n    contentJson: PropTypes.shape({\n      notes: PropTypes.object,\n    }),\n  }).isRequired,\n};\n\nexport default NotesPage;\n\nexport const NotesQuery = graphql`\n  {\n    allNotesJson {\n      edges {\n        node {\n          id\n          code\n          type\n          professor\n          semester\n          courseTitle\n          link\n        }\n      }\n    }\n  }\n`;\n","module.exports = note => {\n  return `/notes/${note.code.replace(/\\s+/g, '')}/${note.type}`;\n};\n"],"sourceRoot":""}