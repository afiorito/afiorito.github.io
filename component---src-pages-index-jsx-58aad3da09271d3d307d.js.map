{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Event.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_Event__WEBPACK_IMPORTED_MODULE_3__","HomePage","a","createElement","className","title","keywords","to","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SEO","_ref","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","name","content","property","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Event","oneOfType","node"],"mappings":"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","file":"component---src-pages-index-jsx-58aad3da09271d3d307d.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nimport SEO from '../components/seo';\nimport Event from '../components/Event';\n\nimport '../styles/layout.scss';\nimport '../styles/responsive.scss';\n\nconst HomePage = () => (\n  <main className=\"HomePage\">\n    <SEO title=\"Home\" keywords={[`personal website`, `blog`, `technology`]} />\n    <Event title=\"Coming Soon.\">\n      <p>\n        Check out my handwritten notes: <Link to=\"/notes\">here</Link>\n      </p>\n    </Event>\n  </main>\n);\n\nexport default HomePage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n    return (\n        <StaticQuery\n            query={detailsQuery}\n            render={data => {\n                const metaDescription = description || data.site.siteMetadata.description;\n                return (\n                    <Helmet\n                        htmlAttributes={{ lang }}\n                        title={title}\n                        meta={[\n                            {\n                                name: `description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:title`,\n                                content: title,\n                            },\n                            {\n                                property: `og:description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:type`,\n                                content: `website`,\n                            },\n                        ]\n                            .concat(\n                                keywords.length > 0\n                                    ? {\n                                          name: `keywords`,\n                                          content: keywords.join(`, `),\n                                      }\n                                    : [],\n                            )\n                            .concat(meta)}\n                    />\n                );\n            }}\n        />\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Event.scss';\n\nconst Event = ({ title, children }) => {\n  return (\n    <div className=\"Event\">\n      <div className=\"event-container\">\n        <h1>{title}</h1>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nEvent.defaultProps = {\n  children: [],\n};\n\nEvent.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default Event;\n"],"sourceRoot":""}